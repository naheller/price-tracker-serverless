service: price-tracker
frameworkVersion: "3"

custom:
  tableNameProducts: "products-${sls:stage}"
  dynamodb:
    stages:
      - ${sls:stage}

provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ProductsTable, Arn]
  environment:
    PRODUCTS_TABLE: ${self:custom.tableNameProducts}

functions:
  api:
    handler: index.handler
    events:
      - httpApi: "*"

resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: productId
            AttributeType: S
        KeySchema:
          - AttributeName: productId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableNameProducts}

plugins:
  - serverless-offline
  - serverless-dynamodb-local
